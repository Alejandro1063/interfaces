package Ejercicio11;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JRadioButton;


public class Ejercicio11 {


	private static final String AZUL = "AZUL";
	private static final String AMARILLO = "AMARILLO";
	private static final String ROJO = "ROJO";
	private static final String VERDE = "VERDE";
	private JFrame frame;
	private JTextField textTab1;
	private JTextField textTab2;
	private JTextField textTab3;
	private JTextField textTab4;
	private Color color;
	

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Ejercicio11 window = new Ejercicio11();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Ejercicio11() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 560, 470);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);

		textTab1 = new JTextField();
		textTab1.setBounds(69, 60, 125, 20);
		frame.getContentPane().add(textTab1);
		textTab1.setColumns(10);

		textTab2 = new JTextField();
		textTab2.setBounds(69, 136, 125, 20);
		frame.getContentPane().add(textTab2);
		textTab2.setColumns(10);

		textTab3 = new JTextField();
		textTab3.setBounds(69, 209, 125, 20);
		frame.getContentPane().add(textTab3);
		textTab3.setColumns(10);

		textTab4 = new JTextField();
		textTab4.setBounds(69, 296, 125, 20);
		frame.getContentPane().add(textTab4);
		textTab4.setColumns(10);
		

		JComboBox<String> combo = new JComboBox<String>();
		
		combo.setBounds(291, 59, 205, 22);
		frame.getContentPane().add(combo);
		combo.addItem(ROJO);
		combo.addItem(VERDE);
		combo.addItem(AMARILLO);
		combo.addItem(AZUL);
		combo.setFocusable(false);
		
		JRadioButton rdbtnRojo = new JRadioButton("ROJO");
		rdbtnRojo.setBounds(313, 135, 109, 23);
		frame.getContentPane().add(rdbtnRojo);
		
		JRadioButton rdbtnVerde = new JRadioButton("VERDE");
		rdbtnVerde.setBounds(313, 178, 109, 23);
		frame.getContentPane().add(rdbtnVerde);
		
		JRadioButton rdbtnAmarillo = new JRadioButton("AMARILLO");
		rdbtnAmarillo.setBounds(313, 220, 109, 23);
		frame.getContentPane().add(rdbtnAmarillo);
		
		JRadioButton rdbtnAzul = new JRadioButton("AZUL");
		rdbtnAzul.setBounds(313, 262, 109, 23);
		frame.getContentPane().add(rdbtnAzul);
		combo.getSelectedItem();
		
		ButtonGroup group = new ButtonGroup();
		group.add(rdbtnRojo);
		group.add(rdbtnVerde);
		group.add(rdbtnAmarillo);
		group.add(rdbtnAzul);
				
				
				
		ItemListener item = new ItemListener() {
			
			@Override
			public void itemStateChanged(ItemEvent e) {
				if (combo.getSelectedItem().equals(ROJO)) {
					color = Color.RED;
					rdbtnRojo.setSelected(true);
		
					
				}
				else if (combo.getSelectedItem().equals(VERDE)) {
					color = Color.GREEN;
					rdbtnVerde.setSelected(true);
				
					
				}
				else if (combo.getSelectedItem().equals(AMARILLO)) {
					color = Color.YELLOW;
					rdbtnAmarillo.setSelected(true);
					
				}
				else if (combo.getSelectedItem().equals(AZUL)) {
					color = Color.BLUE;
					rdbtnAzul.setSelected(true);
					
				}
			}
			
			
		};
		
		combo.addItemListener(item);
		
		
				
		ActionListener actionBoton = new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if (e.getSource()==rdbtnRojo) {
					combo.setSelectedItem(ROJO);
					
				}
				else if (e.getSource()==rdbtnVerde) {
					combo.setSelectedItem(VERDE);
				}
				else if (e.getSource()==rdbtnAmarillo) {
					combo.setSelectedItem(AMARILLO);
				}
				else if (e.getSource()==rdbtnAzul) {
					combo.setSelectedItem(AZUL);
				}
				
			}
		};
		rdbtnRojo.addActionListener(actionBoton);
		rdbtnVerde.addActionListener(actionBoton);
		rdbtnAmarillo.addActionListener(actionBoton);
		rdbtnAzul.addActionListener(actionBoton);
		
		FocusListener focus = new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent e) {
				JTextField colorChange = new JTextField();
				colorChange = (JTextField) e.getSource();
				colorChange.setBackground(new Color(255, 255, 255));
				
			}
			
			@Override
			public void focusGained(FocusEvent e) {
				JTextField colorChange = new JTextField();
				colorChange = (JTextField) e.getSource();
				colorChange.setBackground(color);
			}
		};
		
		textTab1.addFocusListener(focus);
		textTab2.addFocusListener(focus);
		textTab3.addFocusListener(focus);
		textTab4.addFocusListener(focus);
		
		KeyListener keyListen = new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {

			}

			@Override
			public void keyReleased(KeyEvent e) {

			}

			@Override
			public void keyPressed(KeyEvent e) {

				if (e.getKeyCode() == KeyEvent.VK_DOWN || e.getKeyCode() == KeyEvent.VK_ENTER) {
					JTextField transferT = new JTextField();
					transferT = (JTextField) e.getSource();
					transferT.transferFocus();
				}
				
				if (e.getKeyCode() == KeyEvent.VK_UP ) {
					JTextField transferT = new JTextField();
					transferT = (JTextField) e.getSource();
					transferT.transferFocusBackward();
				}
				
				
			}

		};
		textTab1.addKeyListener(keyListen);
		textTab2.addKeyListener(keyListen);
		textTab3.addKeyListener(keyListen);
		textTab4.addKeyListener(keyListen);

		
	}
	}
